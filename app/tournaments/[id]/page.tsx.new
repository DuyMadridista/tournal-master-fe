"use client"

import { useState, useEffect } from "react"
import { useParams } from "next/navigation"
import { Users, Calendar, ListChecks, BarChart3, ArrowRight, Edit, Clock, MapPin, Layers, LayoutGrid, Trophy } from "lucide-react"
import Link from "next/link"
import { useDataFetching } from "../../../context/DataFetchingContext"
import LoadingSpinner from "../../../components/ui-elements/LoadingSpinner"
import { Button } from "../../../components/ui/button"

interface TournamentDetail {
  id: string
  title: string
  category: string
  format: string
  location: string
  description: string
  startDate: Date
  endDate: Date
  status: "active" | "completed" | "upcoming"
  teamsCount: number
  matchesCount: number
  completedMatches: number
  upcomingMatches: number
  progress: number
  organizers: { name: string; role: string }[]
  nextMatches: {
    id: string
    date: Date
    time: string
    team1: string
    team2: string
    venue: string
  }[]
}

export default function TournamentOverview() {
  const params = useParams()
  const tournamentId = params?.id as string
  const [tournament, setTournament] = useState<TournamentDetail | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const { simulateFetch } = useDataFetching()

  useEffect(() => {
    const loadTournament = async () => {
      try {
        // Sample data
        const sampleTournament: TournamentDetail = {
          id: tournamentId,
          title: "Summer Football Championship 2023",
          category: "Football",
          format: "Group Stage + Knockout",
          location: "City Stadium",
          description: "Annual summer football tournament for amateur teams.",
          startDate: new Date("2023-06-15"),
          endDate: new Date("2023-07-30"),
          status: "active",
          teamsCount: 16,
          matchesCount: 32,
          completedMatches: 14,
          upcomingMatches: 18,
          progress: 45,
          organizers: [
            { name: "John Smith", role: "Tournament Manager" },
            { name: "Sarah Johnson", role: "Coordinator" },
            { name: "Michael Brown", role: "Head Referee" },
          ],
          nextMatches: [
            {
              id: "match-1",
              date: new Date(Date.now() + 86400000), // Tomorrow
              time: "15:00",
              team1: "FC Barcelona",
              team2: "Real Madrid",
              venue: "Field A",
            },
            {
              id: "match-2",
              date: new Date(Date.now() + 86400000), // Tomorrow
              time: "17:30",
              team1: "Manchester United",
              team2: "Bayern Munich",
              venue: "Field B",
            },
            {
              id: "match-3",
              date: new Date(Date.now() + 172800000), // Day after tomorrow
              time: "16:00",
              team1: "Liverpool",
              team2: "PSG",
              venue: "Field A",
            },
          ],
        }

        // Simulate API call
        const data = await simulateFetch(sampleTournament, 1500)
        setTournament(data)
      } catch (error) {
        console.error("Failed to load tournament details:", error)
      } finally {
        setIsLoading(false)
      }
    }

    loadTournament()
  }, [tournamentId, simulateFetch])

  const formatDate = (date: Date): string => {
    return new Intl.DateTimeFormat("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
    }).format(date)
  }

  if (isLoading) {
    return (
      <div className="flex justify-center items-center min-h-[300px]">
        <LoadingSpinner size="lg" />
      </div>
    )
  }

  if (!tournament) {
    return (
      <div className="text-center p-8">
        <h3 className="text-lg font-medium text-neutral-800 mb-2">Unable to load tournament information</h3>
        <p className="text-neutral-600">An error occurred while loading tournament details.</p>
      </div>
    )
  }

  return (
    <div className="container mx-auto px-4 py-6">
      {/* Header */}
      <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-4">
          <div>
            <h1 className="text-2xl font-bold text-neutral-900">{tournament.title}</h1>
            <div className="flex items-center mt-2 text-sm text-neutral-600">
              <Calendar className="w-4 h-4 mr-1" />
              <span>
                {formatDate(tournament.startDate)} - {formatDate(tournament.endDate)}
              </span>
            </div>
          </div>
          <div className="mt-4 md:mt-0 flex space-x-2">
            <Button variant="outline" size="sm" className="flex items-center">
              <Edit className="w-4 h-4 mr-1" />
              Edit
            </Button>
            <Button size="sm" className="flex items-center">
              <Trophy className="w-4 h-4 mr-1" />
              Leaderboard
            </Button>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
          <div className="flex items-center">
            <div className="bg-blue-100 p-2 rounded-full">
              <MapPin className="w-5 h-5 text-blue-600" />
            </div>
            <div className="ml-3">
              <div className="text-sm font-medium text-neutral-500">Location</div>
              <div className="text-neutral-800">{tournament.location}</div>
            </div>
          </div>

          <div className="flex items-center">
            <div className="bg-purple-100 p-2 rounded-full">
              <Layers className="w-5 h-5 text-purple-600" />
            </div>
            <div className="ml-3">
              <div className="text-sm font-medium text-neutral-500">Category</div>
              <div className="text-neutral-800">{tournament.category}</div>
            </div>
          </div>

          <div className="flex items-center">
            <div className="bg-amber-100 p-2 rounded-full">
              <LayoutGrid className="w-5 h-5 text-amber-600" />
            </div>
            <div className="ml-3">
              <div className="text-sm font-medium text-neutral-500">Format</div>
              <div className="text-neutral-800">{tournament.format}</div>
            </div>
          </div>
        </div>
      </div>

      <div className="flex justify-between items-start mb-6">
        <h2 className="text-2xl font-bold text-neutral-800">Tournament Overview</h2>
        <Link href={`/tournaments/${tournamentId}/edit`} className="btn btn-outline flex items-center space-x-2">
          <Edit className="h-5 w-5" />
          <span>Edit</span>
        </Link>
      </div>

      {/* Tournament Progress */}
      <div className="mb-8">
        <h3 className="text-lg font-medium text-neutral-800 mb-3">Tournament Progress</h3>
        <div className="w-full bg-neutral-200 rounded-full h-3 mb-2">
          <div className="bg-primary-500 h-3 rounded-full" style={{ width: `${tournament.progress}%` }}></div>
        </div>
        <div className="flex justify-between text-sm text-neutral-600">
          <span>Start: {formatDate(tournament.startDate)}</span>
          <span>{tournament.progress}% completed</span>
          <span>End: {formatDate(tournament.endDate)}</span>
        </div>
      </div>

      {/* Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4">
          <div className="flex items-center mb-2">
            <div className="p-2 rounded-full bg-primary-100 text-primary-600 mr-3">
              <Users className="h-5 w-5" />
            </div>
            <h4 className="text-lg font-medium text-neutral-800">Participating Teams</h4>
          </div>
          <p className="text-3xl font-bold text-neutral-800">{tournament.teamsCount}</p>
          <Link
            href={`/tournaments/${tournamentId}/participants`}
            className="mt-2 inline-flex items-center text-sm text-primary-600 hover:text-primary-700"
          >
            <span>View details</span>
            <ArrowRight className="h-4 w-4 ml-1" />
          </Link>
        </div>

        <div className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4">
          <div className="flex items-center mb-2">
            <div className="p-2 rounded-full bg-secondary-100 text-secondary-600 mr-3">
              <Calendar className="h-5 w-5" />
            </div>
            <h4 className="text-lg font-medium text-neutral-800">Total Matches</h4>
          </div>
          <p className="text-3xl font-bold text-neutral-800">{tournament.matchesCount}</p>
          <Link
            href={`/tournaments/${tournamentId}/schedule`}
            className="mt-2 inline-flex items-center text-sm text-primary-600 hover:text-primary-700"
          >
            <span>View schedule</span>
            <ArrowRight className="h-4 w-4 ml-1" />
          </Link>
        </div>

        <div className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4">
          <div className="flex items-center mb-2">
            <div className="p-2 rounded-full bg-success-100 text-success-600 mr-3">
              <ListChecks className="h-5 w-5" />
            </div>
            <h4 className="text-lg font-medium text-neutral-800">Completed</h4>
          </div>
          <p className="text-3xl font-bold text-neutral-800">{tournament.completedMatches}</p>
          <Link
            href={`/tournaments/${tournamentId}/results`}
            className="mt-2 inline-flex items-center text-sm text-primary-600 hover:text-primary-700"
          >
            <span>View results</span>
            <ArrowRight className="h-4 w-4 ml-1" />
          </Link>
        </div>

        <div className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4">
          <div className="flex items-center mb-2">
            <div className="p-2 rounded-full bg-accent-100 text-accent-600 mr-3">
              <BarChart3 className="h-5 w-5" />
            </div>
            <h4 className="text-lg font-medium text-neutral-800">Upcoming</h4>
          </div>
          <p className="text-3xl font-bold text-neutral-800">{tournament.upcomingMatches}</p>
          <Link
            href={`/tournaments/${tournamentId}/schedule`}
            className="mt-2 inline-flex items-center text-sm text-primary-600 hover:text-primary-700"
          >
            <span>View upcoming schedule</span>
            <ArrowRight className="h-4 w-4 ml-1" />
          </Link>
        </div>
      </div>

      {/* Tournament Information and Upcoming Matches */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        {/* Tournament Information */}
        <div>
          <h3 className="text-lg font-medium text-neutral-800 mb-3">Tournament Information</h3>
          <div className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4">
            <div className="space-y-4">
              <div>
                <p className="text-sm text-neutral-500 mb-1">Format</p>
                <p className="font-medium">{tournament.format}</p>
              </div>
              <div>
                <p className="text-sm text-neutral-500 mb-1">Location</p>
                <p className="font-medium">{tournament.location}</p>
              </div>
              <div>
                <p className="text-sm text-neutral-500 mb-1">Description</p>
                <p className="font-medium">{tournament.description}</p>
              </div>
              <div>
                <p className="text-sm text-neutral-500 mb-1">Organizers</p>
                <ul className="space-y-2">
                  {tournament.organizers.map((organizer, index) => (
                    <li key={index} className="flex justify-between">
                      <span className="font-medium">{organizer.name}</span>
                      <span className="text-neutral-500">{organizer.role}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            <div className="mt-4 text-center">
              <Link
                href={`/tournaments/${tournamentId}/details`}
                className="btn btn-outline flex items-center justify-center space-x-2 w-full"
              >
                <span>View full details</span>
                <ArrowRight className="h-4 w-4" />
              </Link>
            </div>
          </div>
        </div>

        {/* Upcoming Matches */}
        <div>
          <h3 className="text-lg font-medium text-neutral-800 mb-3">Upcoming Matches</h3>
          <div className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4">
            <div className="space-y-4">
              {tournament.nextMatches.map((match) => (
                <div key={match.id} className="p-3 border border-neutral-200 rounded-lg hover:bg-neutral-50">
                  <div className="flex items-center text-sm text-neutral-500 mb-2">
                    <Calendar className="h-4 w-4 mr-1" />
                    <span className="mr-3">
                      {new Intl.DateTimeFormat('en-US', {
                        weekday: 'long',
                        month: 'short',
                        day: 'numeric',
                      }).format(match.date)}
                    </span>
                    <Clock className="h-4 w-4 mr-1" />
                    <span className="mr-3">{match.time}</span>
                    <MapPin className="h-4 w-4 mr-1" />
                    <span>{match.venue}</span>
                  </div>
                  <div className="flex items-center justify-center">
                    <div className="flex-1 text-right">
                      <span className="font-medium">{match.team1}</span>
                    </div>
                    <div className="mx-4 text-center">
                      <span className="text-lg font-bold text-neutral-400">VS</span>
                    </div>
                    <div className="flex-1">
                      <span className="font-medium">{match.team2}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            <div className="mt-4 text-center">
              <Link
                href={`/tournaments/${tournamentId}/schedule`}
                className="btn btn-outline flex items-center justify-center space-x-2 w-full"
              >
                <span>View full schedule</span>
                <ArrowRight className="h-4 w-4" />
              </Link>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Links */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <Link
          href={`/tournaments/${tournamentId}/participants`}
          className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4 hover:border-primary-200 hover:shadow-md transition-all duration-200 flex items-center"
        >
          <div className="p-2 rounded-full bg-primary-100 text-primary-600 mr-3">
            <Users className="h-5 w-5" />
          </div>
          <div>
            <h4 className="font-medium text-neutral-800">Participating Teams</h4>
            <p className="text-sm text-neutral-500">Manage teams participating in the tournament</p>
          </div>
          <ArrowRight className="h-4 w-4 ml-auto text-primary-500" />
        </Link>

        <Link
          href={`/tournaments/${tournamentId}/schedule`}
          className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4 hover:border-primary-200 hover:shadow-md transition-all duration-200 flex items-center"
        >
          <div className="p-2 rounded-full bg-secondary-100 text-secondary-600 mr-3">
            <Calendar className="h-5 w-5" />
          </div>
          <div>
            <h4 className="font-medium text-neutral-800">Schedule</h4>
            <p className="text-sm text-neutral-500">View and manage match schedule</p>
          </div>
          <ArrowRight className="h-4 w-4 ml-auto text-primary-500" />
        </Link>

        <Link
          href={`/tournaments/${tournamentId}/leaderboard`}
          className="bg-white rounded-lg shadow-sm border border-neutral-200 p-4 hover:border-primary-200 hover:shadow-md transition-all duration-200 flex items-center"
        >
          <div className="p-2 rounded-full bg-accent-100 text-accent-600 mr-3">
            <BarChart3 className="h-5 w-5" />
          </div>
          <div>
            <h4 className="font-medium text-neutral-800">Leaderboard</h4>
            <p className="text-sm text-neutral-500">View current leaderboard</p>
          </div>
          <ArrowRight className="h-4 w-4 ml-auto text-primary-500" />
        </Link>
      </div>
    </div>
  )
}
